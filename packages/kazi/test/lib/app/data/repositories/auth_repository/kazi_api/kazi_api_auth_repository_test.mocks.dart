// Mocks generated by Mockito 5.4.2 from annotations
// in kazi/test/lib/app/data/repositories/auth_repository/kazi_api/kazi_api_auth_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:kazi/app/data/connection/kazi_connection.dart' as _i3;
import 'package:kazi/app/models/api_response.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiResponse_0 extends _i1.SmartFake implements _i2.ApiResponse {
  _FakeApiResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [KaziConnection].
///
/// See the documentation for Mockito's code generation for more information.
class MockKaziConnection extends _i1.Mock implements _i3.KaziConnection {
  MockKaziConnection() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ApiResponse> get(
    String? url, {
    Map<String, dynamic>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#parameters: parameters},
        ),
        returnValue: _i4.Future<_i2.ApiResponse>.value(_FakeApiResponse_0(
          this,
          Invocation.method(
            #get,
            [url],
            {#parameters: parameters},
          ),
        )),
      ) as _i4.Future<_i2.ApiResponse>);
  @override
  _i4.Future<_i2.ApiResponse> post(
    String? url, {
    Object? body,
    Map<String, dynamic>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #body: body,
            #parameters: parameters,
          },
        ),
        returnValue: _i4.Future<_i2.ApiResponse>.value(_FakeApiResponse_0(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #body: body,
              #parameters: parameters,
            },
          ),
        )),
      ) as _i4.Future<_i2.ApiResponse>);
  @override
  _i4.Future<_i2.ApiResponse> put(
    String? url, {
    Object? body,
    Map<String, dynamic>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #body: body,
            #parameters: parameters,
          },
        ),
        returnValue: _i4.Future<_i2.ApiResponse>.value(_FakeApiResponse_0(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #body: body,
              #parameters: parameters,
            },
          ),
        )),
      ) as _i4.Future<_i2.ApiResponse>);
  @override
  _i4.Future<_i2.ApiResponse> patch(
    String? url, {
    Object? body,
    Map<String, dynamic>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #body: body,
            #parameters: parameters,
          },
        ),
        returnValue: _i4.Future<_i2.ApiResponse>.value(_FakeApiResponse_0(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #body: body,
              #parameters: parameters,
            },
          ),
        )),
      ) as _i4.Future<_i2.ApiResponse>);
  @override
  _i4.Future<_i2.ApiResponse> delete(
    String? url, {
    Object? body,
    Map<String, dynamic>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #body: body,
            #parameters: parameters,
          },
        ),
        returnValue: _i4.Future<_i2.ApiResponse>.value(_FakeApiResponse_0(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #body: body,
              #parameters: parameters,
            },
          ),
        )),
      ) as _i4.Future<_i2.ApiResponse>);
}
