name: Android Build

on:
  push:
    branches: [ "ci_cd" ]
    paths-ignore:
      - '**/README.md'
  pull_request:
    branches: [ "master" ]

jobs:

  version:
    name: Create version number
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      previous-version: ${{ steps.version.outputs.previous-version }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0  

      - name: Git Version
        id: git-version
        uses: codacy/git-version@2.7.1

      - name: Use the version
        id: version
        run: |
          echo "version=${{ steps.git-version.outputs.version }}" >> $GITHUB_OUTPUT

      - name: Use the previous version
        id: previous-version
        run: |
          echo "previous-version=${{ steps.git-version.outputs.previous-version }}" >> $GITHUB_OUTPUT  

  build:
    name: Create Android Build
    needs: version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Update version in YAML
        run: sed -i -E 's/(([0-9]\.){2}[0-9])((\-\w+\.\w+\.\w+)?|(\-\w+\.\w+))?(\+[0-9])/${{ needs.version.outputs.version }}+${{ github.run_number }}/g' pubspec.yaml
      
      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: upload-keystore.jks
          encodedString: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      
      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties

      - name: Create google-services.json
        run: |
          echo "${{ secrets.GOOGLE_SERVICES }}" > android/app/google-services.json

      - name: Create firebase_options.dart
        run: |
          echo "${{ secrets.FIREBASE_OPTIONS_CLASS }}" > lib/firebase_options.dart

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "12.x"
          cache: gradle

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.3.9'
          cache: true
     
      - name: Get dependencies
        run: flutter pub get

      - name: Run Tests
        run: flutter test --coverage

      - name: Upload to code coverage
        uses: codecov/codecov-action@v3.1.1
        with:
          file: coverage/lcov.info

      - name: Start Android Release Build
        # run: flutter build appbundle
        run: flutter build apk
      
      - name: Upload Android Release
        uses: actions/upload-artifact@v3
        with:
          name: my_services_${{ needs.version.outputs.version }}+${{ github.run_number }}
          # path: build/app/outputs/bundle/release/app-release.aab
          path: build/app/outputs/apk/release/app-release.apk